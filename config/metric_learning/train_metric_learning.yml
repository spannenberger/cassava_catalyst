model:
  _target_: ResNet50 # имя клаccа. Сам класс будет сконструирован в registry по этому имени
args: # Различные аргументы для Catalyst
  expdir: src/metric_learning # Путь до нашего эксперимента, с файлом `__init__`, в котором импортируется Runner, и, опционально, регистрируются все дополнительные сущности: model, callback, criterion, etc
  logdir: logs # Путь в который будут сохранятся логи
  verbose: True # Нужно ли выводить на консоль информацию об обучении
  seed: 42 # сид обучения для PyTorch, Numpy, Python и Tensorflow
  deterministic: True # Нужно ли использовать deterministic CuDNN
  benchmark: True # Нужно ли использовать CuDNN benchmark

runner: # Параметры для инициализации Runner
   _target_: MertricLearningSupervisedRunner
   input_key: &model_input "features"
   output_key: &model_output "embeddings"
   target_key: &model_target "targets"
   loss_key: &model_loss "loss"

engine: # Параметры для distributed training и NVIDIA Apex
  _target_: DeviceEngine

loggers:
# Встроенные логеры каталиста
#(Возможные логеры: https://github.com/catalyst-team/catalyst/tree/master/catalyst/loggers)
  console:
    _target_: ConsoleLogger

stages: # Словарь всех стадий Catalyst, для обучения и/или инфера. Содержат ключевые слова с параметрами, которые применятся ко всем стейджам, так и сами имена стейджей
  stage:

    optimizer: # Параметры оптимизатора
      _target_: Adam
      lr: 0.001
    scheduler: # Подключение кастомного шедулера
      _key_value: False
      _target_: CustomScheduler
      delay_epochs: 2
      total_epochs: 5
      eta_min: 0.0001
    callbacks:
      scheduler:
        _target_: SchedulerCallback
      # Подключение колбэков каталиста
      # (Возможные колбэки: https://github.com/catalyst-team/catalyst/tree/master/catalyst/callbacks)
      metr:
        _target_: CustomCMC
        embeddings_key: *model_output
        labels_key: *model_target
        is_query_key: "is_query"
        topk_args: [1]
        loaders: valid
      criterion:
        _target_: CustomTrainCriterion
        input_key: *model_output
        target_key: *model_target
        metric_key: *model_loss
        loaders: train
      optimizer: # Параметры для оптимизатора
        _target_: OptimizerCallback
        metric_key: *model_loss
      verbose:
        _target_: TqdmCallback
      saver: # Сохранение 3-х лучших моделей эксперимента
        _target_: CheckpointCallback
        logdir: "logs/checkpoints"
        save_n_best: 3

      # Подключение кастомных колбэков
      #(Возможные колбэки: ./src_multilabel/callbacks/)

    loaders: &loaders
      batch_size: 50 # Размер батча для всех стейджей
      num_workers: 0 #для локальной поставить 0
    num_epochs: 5 # Количество эпох эксперимента
    valid_loader: valid
    main_metric: cmc01
    minimize_metric: False
