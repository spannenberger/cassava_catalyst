model:
  _target_: ResNet18 # имя клаccа. Сам класс будет сконструирован в registry по этому имени
  num_classes: &num_classes 5

args: # Различные аргументы для Catalyst
  expdir: src/classification # Путь до нашего эксперимента, с файлом `__init__`, в котором импортируется Runner, и, опционально, регистрируются все дополнительные сущности: model, callback, criterion, etc
  logdir: logs # Путь в который будут сохранятся логи
  verbose: True # Нужно ли выводить на консоль информацию об обучении
  seed: 42 # сид обучения для PyTorch, Numpy, Python и Tensorflow
  deterministic: True # Нужно ли использовать deterministic CuDNN
  benchmark: True # Нужно ли использовать CuDNN benchmark

runner: # Параметры для инициализации Runner
   _target_: MulticlassSupervisedRunner
   input_key: &model_input "features"
   output_key: &model_output "logits"
   target_key: &model_target "targets"
   loss_key: &model_loss "loss"

engine: # Параметры для distributed training и NVIDIA Apex
  _target_: DeviceEngine

class_names: &class_names ["Cassava Bacterial Blight (CBB)", "Cassava Brown Streak Disease (CBSD)", "Cassava Green Mottle (CGM)", "Cassava Mosaic Disease (CMD)", "Healthy"]

loggers:
# Встроенные логеры каталиста
#(Возможные логеры: https://github.com/catalyst-team/catalyst/tree/master/catalyst/loggers)
  console:
    _target_: ConsoleLogger
  mlflow:
    _target_: MLflowLogger
    experiment: 'cassava'
  tensorboard:
    _target_: TensorboardLogger
    logdir: "./logs/ui"

stages: # Словарь всех стадий Catalyst, для обучения и/или инфера. Содержат ключевые слова с параметрами, которые применятся ко всем стейджам, так и сами имена стейджей
  stage:
    criterion: # Параметры для лосс-функции
      _target_: CrossEntropyLoss

    optimizer: # Параметры оптимизатора
      _target_: Adam
      lr: 0.0001
    scheduler: # Подключение кастомного шедулера
      _key_value: False

      _target_: CustomScheduler
      delay_epochs: 2
      total_epochs: 5
      eta_min: 0.00001
    callbacks:
      # Подключение колбэков каталиста
      # (Возможные колбэки: https://github.com/catalyst-team/catalyst/tree/master/catalyst/callbacks)

      optimizer: # Параметры для оптимизатора
        _target_: OptimizerCallback
        metric_key: *model_loss
      accuracy: 
        _target_: AccuracyCallback
        input_key: *model_output
        target_key: *model_target
      loss:
        _target_: CriterionCallback
        input_key: *model_output
        target_key: *model_target
        metric_key: *model_loss
      verbose:
        _target_: TqdmCallback
      saver: # Сохранение 3-х лучших моделей эксперимента
        _target_: CheckpointCallback
        logdir: "logs/checkpoints"
        save_n_best: 3

      # Подключение кастомных колбэков
      #(Возможные колбэки: ./src_multilabel/callbacks/)

      infer: 
        _target_: MulticlassInerCallback
        subm_file: "./crossval_log/preds.csv"
      custom_mlflow: # Логирование ошибочных фотографий в mlflow
        _target_: MLFlowMulticlassLoggingCallback
      custom_tensorboard: # Логирование ошибочных фотографий в tensorboard
        _target_: TensorboardMulticlassLoggingCallback

    data: # Подключение данных и параметров обучения
      shuffle: false
      train_dir: "./train_dataset"
      train_image_dir: "train_images"
      train_meta: "train.csv"
      transform_path: "config/classification/augmentations/light.yml" # Режим аугментаций данных (Возможны: light, medium, hard(./config/classification/augmentations/))
      valid_size: 0.2
    loaders: &loaders
      batch_size: 1 # Размер батча для всех стейджей
      num_workers: 0 #для локальной поставить 0
    num_epochs: 1 # Количество эпох эксперимента
    valid_loader: valid
    main_metric: accuracy01
    minimize_metric: False
